Q.Spirally traversing a matrix

ex :  Input: mat[][] = [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]]
      Output: [1, 2, 3, 4, 5, 6, 12, 18, 17, 16, 15, 14, 13, 7, 8, 9, 10, 11]
      Explanation: Applying same technique as shown above.

code :
 vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        
         int n = mat.size();
        int m = mat[0].size();
        int down=n-1;
        int top=0;
        int left = 0;
        int right = m-1;
        int dir=0;

        vector<int>v;
        while(left<=right&&top<=down){
            if(dir==0){
                for(int i = left;i<=right;i++){
                    v.push_back(mat[top][i]);
                }
                top++;
            }
            else if(dir==1){
                for(int i = top;i<=down;i++){
                    v.push_back(mat[i][right]);
                }
                right--;
            }
            else if(dir==2){
                for(int i = right;i>=left;i--){
                    v.push_back(mat[down][i]);
                }
                down--;
            }
            else{
                for(int i =down;i>=top;i--){
                    v.push_back(mat[i][left]);
                }
                left++;
            }
            dir+=1;
            dir=dir%4;
        }
        return v;
    
    }
