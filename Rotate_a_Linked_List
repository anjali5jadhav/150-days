Q.Rotate a Linked List

ex : Input: head = 10 -> 20 -> 30 -> 40 -> 50, k = 4
     Output: 50 -> 10 -> 20 -> 30 -> 40
     Explanation:
     Rotate 1: 20 -> 30 -> 40 -> 50 -> 10
     Rotate 2: 30 -> 40 -> 50 -> 10 -> 20
     Rotate 3: 40 -> 50 -> 10 -> 20 -> 30
     Rotate 4: 50 -> 10 -> 20 -> 30 -> 40

Code :
class Solution {
  public:
    Node* rotate(Node* head, int k) {
        
        if(k==0)
        {
            return head;
        }
        int len=1;
        Node* temp=head;
        while(temp->next)
        {
            temp=temp->next;
            len++;
        }
        k=k%len;
        if(k==0)
        {
            return head;
        }
        temp->next=head;
        Node* op=head;
        for(int i=1;i<k;i++)
        {
            op=op->next;
        }
        Node* oph=op->next;
        op->next=NULL;
        return oph;
    }
